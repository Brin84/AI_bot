from aiogram.filters import CommandStart
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, FSInputFile, ReplyKeyboardRemove

from keyboards.inline import get_learning_menu
from settings_ai.settings import ask

from keyboards.reply import reply_start
from states.creator import Creator
from data.topics import daily_routine_words, irregular_verbs

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    """–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    photo = FSInputFile("media/start_file.jpg")
    await message.answer_photo(
        photo=photo,
        caption="–ü—Ä–∏–≤–µ—Ç \n–Ø –≥–æ—Ç–æ–≤ –¥–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=reply_start()
    )


@router.message(F.text == "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –Ω–∞—à –¥–∏–∞–ª–æ–≥")
async def open_learning_menu(message: Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –∏–∑—É—á–∞—Ç—å üëá",
        reply_markup=get_learning_menu()
    )


@router.message(Creator.wait)
async def antiflood(message: Message):
    await message.answer("–û–∂–∏–¥–∞–π—Ç–µ, –í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")


@router.message()
async def generate(message: Message, state: FSMContext):
    await state.set_state(Creator.wait)
    response = await ask(message.text)
    await message.answer(response)
    await state.clear()
